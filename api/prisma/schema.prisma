// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Post{
  id String @id @default(uuid())
  title String
  price Int
  images String[]
  address String
  city String
  bedroom Int
  bathroom Int
  lattitude String
  longitude String
  type Type
  property Property
  createdAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  userId String
  postDetail PostDetail?
  savedPost SavedPost[]
}

enum Type{
  buy
  rent
}

enum Property{
  apartment
  house
  condo
  land
}

model PostDetail {
  id String @id @default(uuid())
  description String
  utilities String?
  pet String?
  income String?
  size Int?
  school Int?
  bus Int?
  restaurant Int?
  post Post @relation(fields: [postId], references: [id])
  postId String @unique
}

model SavedPost{
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  post Post @relation(fields: [postId], references: [id])
  userId String
  postId String
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model User{
  id String @id @default(uuid())
  email String @unique
  username String @unique
  password String
  avatar String?
  createdAt DateTime @default(now())
  posts Post[]
  savedPost SavedPost[]
  chats ChatsOnUsers[]
}

model Chat{
  id String @id @default(uuid())
  users ChatsOnUsers[]
  seenBy String[]
  createdAt DateTime @default(now())
  messages Message[]
  lastMessage String?
}
model ChatsOnUsers{
  user User @relation(fields: [userId], references: [id])
  userId String
  chats Chat @relation(fields: [chatId], references: [id])
  chatId String
  userIds String[]
  

@@id([userId, chatId])
}


model Message{
  id String @id @default(uuid())
  text String
  userId String
  chat Chat @relation(fields: [chatId], references: [id])
  chatId String
  createdAt DateTime @default(now())
}